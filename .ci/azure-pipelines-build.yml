jobs:
  - job: Build
    displayName: 'Build'

    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: NodeTool@0
        displayName: 'Install Node'
        inputs:
          versionSpec: '12.x'

      - task: Cache@2
        displayName: 'Check Cache'
        inputs:
          key: 'yarn | yarn.lock'
          path: 'node_modules'
          cacheHitVar: CACHE_RESTORED

      - script: 'yarn install --frozen-lockfile'
        displayName: 'Install Dependencies'
        condition: ne(variables.CACHE_RESTORED, 'true')

      - script: 'yarn build'
        displayName: 'Build'

  - job: BuildDocker
    displayName: 'Build Docker Image'

    strategy:
      matrix:
        amd64:
          BuildConfiguration: amd64
        arm64:
          BuildConfiguration: arm64
        armhf:
          BuildConfiguration: armhf

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      - name: Version
        value: $[replace(variables['Build.SourceBranch'],'refs/tags/v','')]

    steps:
      - task: Docker@2
        displayName: 'Build and Push Unstable Docker Image'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')
        inputs:
          repository: 'jellyfin/jellyfin-vue'
          command: buildAndPush
          buildContext: '.'
          Dockerfile: 'Dockerfile'
          containerRegistry: Docker Hub
          tags: |
            unstable-$(Build.BuildNumber)-$(BuildConfiguration)
            unstable-$(BuildConfiguration)

      - task: Docker@2
        displayName: 'Build and Push Stable Docker Image'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
        inputs:
          repository: 'jellyfin/jellyfin-vue'
          command: buildAndPush
          buildContext: '.'
          Dockerfile: 'Dockerfile'
          containerRegistry: Docker Hub
          tags: |
            stable-$(Build.BuildNumber)-$(BuildConfiguration)
            $(Version)-$(BuildConfiguration)

  - job: PushManifests
    displayName: 'Build and Publish Docker Manifests'

    pool:
      vmImage: 'ubuntu-latest'

    variables:
      DOCKER_CLI_EXPERIMENTAL: enabled

    steps:
      - script: |
          docker manifest create \
          jellyfin/jellyfin-vue:unstable \
          --amend jellyfin/jellyfin-vue:unstable-armhf \
          --amend jellyfin/jellyfin-vue:unstable-amd64 \
          --amend jellyfin/jellyfin-vue:unstable-arm64
        displayName: 'Build Unstable Manifest'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')

      - script: |
          docker manifest push jellyfin/jellyfin-vue:unstable
        displayName: 'Push Unstable Manifest'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')

      - script: |
          docker manifest create \
          jellyfin/jellyfin-vue:$(Version) \
          --amend jellyfin/jellyfin-vue:$(Version)-armhf \
          --amend jellyfin/jellyfin-vue:$(Version)-amd64 \
          --amend jellyfin/jellyfin-vue:$(Version)-arm64
          docker manifest create \
          jellyfin/jellyfin-vue:stable \
          --amend jellyfin/jellyfin-vue:$(Version)-armhf \
          --amend jellyfin/jellyfin-vue:$(Version)-amd64 \
          --amend jellyfin/jellyfin-vue:$(Version)-arm64
          jellyfin/jellyfin-vue:latest \
          --amend jellyfin/jellyfin-vue:$(Version)-armhf \
          --amend jellyfin/jellyfin-vue:$(Version)-amd64 \
          --amend jellyfin/jellyfin-vue:$(Version)-arm64
        displayName: 'Build Stable Manifests'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/tags/v')

      - script: |
          docker manifest push jellyfin/jellyfin-vue:$(Version)
          docker manifest push jellyfin/jellyfin-vue:stable
          docker manifest push jellyfin/jellyfin-vue:latest
        displayName: 'Push Stable Manifests'
        condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/tags/v')
